<?xml version="1.0" encoding="UTF-8"?>
<project default="main" basedir="." >
    <path id="classpath">
        <dirset dir="${basedir}/target/classes" />
        <!--由于不需要编译单元测试代码,就注掉了下面的内容-->
        <!--<dirset dir="${basedir}/target/test-classes" />-->

        <!--下面目录为本地maven仓库的jibx和bcel的jar包的绝对路径  同学们也可以采用相对路径-->

        <fileset dir="D:/config/maven_repo/org/jibx/jibx-bind/1.3.1/" includes="*.jar" />
        <fileset dir="D:/config/maven_repo/org/jibx/jibx-run/1.3.1/" includes="*.jar" />
        <fileset dir="D:/config/maven_repo/org/apache/bcel/bcel/6.5.0/" includes="*.jar" />
    </path>
    <!--这个是主任务 , depends 依赖下面写的三个分任务 -->
    <target name="main" depends="compile,bindgen,bind" description="Main target" />
    <target name="compile" description="Compilation target">
        <echo>Building file.</echo>
        <!--相当于运行 javac命令进行源码编译-->
        <javac srcdir="${basedir}/src/main/java" destdir="${basedir}/target/classes" includeantruntime="true" />
    </target>
    <target name="bindgen">
        <echo message="Running BindGen tool" />
        <!--
        相当于运行Java命令生成binding.xml文件 类似于网上说的如下命令 ->
        java -cp ..libx-tools.jar ..BindGen -t 生成文件保存地址 -v 需要绑定文件的class文件 完整包名.类名
        -->
        <java classpathref="classpath" fork="true"  classname="org.jibx.binding.BindingGenerator">
            <!-- 此处写需要生成映射文件的实体类的全类名-->


            <arg value="com.shenlx.xinwen.xml.Address" />
            <arg value="com.shenlx.xinwen.xml.Customer" />
            <arg value="com.shenlx.xinwen.xml.Order" />
            <arg value="com.shenlx.xinwen.xml.Shipping" />
        </java>
    </target>
    <target name="bind">
        <!--将实体类的class和xml映射文件进行绑定-->
        <echo message="Running bind" />
        <taskdef name="bind" classname="org.jibx.binding.ant.CompileTask">
            <classpath refid="classpath"/>
        </taskdef>
        <bind binding="${basedir}/binding.xml">
            <classpath refid="classpath"/>
        </bind>
    </target>
</project>