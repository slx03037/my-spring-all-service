## 应用的访问路径
server:
  context-path: /web

spring:
  datasource:
    # 数据库访问配置, 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    #driver-class-name: oracle.jdbc.driver.OracleDriver
    driver-class-name: com.mysql.cj.jdbc.Driver
    #url: jdbc:oracle:thin:@localhost:1521:ORCL
    url: jdbc:mysql://218.8.57.184:13326/auth-center?useUnicode=true&characterEncoding=utf8&autoReconnect=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true
    username: root
    password: Gongzhongkj@2022
    druid:
      # 连接池配置
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 连接等待超时时间
      max-wait: 30000
      # 配置检测可以关闭的空闲连接间隔时间
      time-between-eviction-runs-millis: 60000
      # 配置连接在池中的最小生存时间
      min-evictable-idle-time-millis: 300000
      validation-query: select '1' from dual
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters, 去掉后监控界面sql无法统计, 'wall'用于防火墙
      filters: stat,wall
      # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
      aop-patterns: com.springboot.servie.*

#      druid:
#        initial-size: 5                                       # 初始化大小
#        min-idle: 10                                          # 最小连接数
#        max-active: 20                                        # 最大连接数
#        max-wait: 60000                                       # 获取连接时的最大等待时间
#        min-evictable-idle-time-millis: 300000                # 一个连接在池中最小生存的时间，单位是毫秒
#        time-between-eviction-runs-millis: 60000              # 多久才进行一次检测需要关闭的空闲连接，单位是毫秒
#        filters: stat                                         # 配置扩展插件：stat-监控统计，log4j-日志，wall-防火墙（防止SQL注入），去掉后，监控界面的sql无法统计   ,wall
#        validation-query: SELECT 1                            # 检测连接是否有效的 SQL语句，为空时以下三个配置均无效
#        test-on-borrow: true                                  # 申请连接时执行validationQuery检测连接是否有效，默认true，开启后会降低性能
#        test-on-return: true                                  # 归还连接时执行validationQuery检测连接是否有效，默认false，开启后会降低性能
#        test-while-idle: true                                 # 申请连接时如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效，默认false，建议开启，不影响性能
#        stat-view-servlet:
#          enabled: true                                       # 是否开启 StatViewServlet
#          allow: 127.0.0.1                                    # 访问监控页面 白名单，默认127.0.0.1
#          deny: 192.168.56.1                                  # 访问监控页面 黑名单
#          login-username: admin                               # 访问监控页面 登陆账号
#          login-password: admin                               # 访问监控页面 登陆密码
#        filter:
#          stat:
#            enabled: true                                     # 是否开启 FilterStat，默认true
#            log-slow-sql: true                                # 是否开启 慢SQL 记录，默认false
#            slow-sql-millis: 5000                             # 慢 SQL 的标准，默认 3000，单位：毫秒
#            merge-sql: false                                  # 合并多个连接池的监控数据，默认false

        #=======================================================================================
management:
  security:
    enabled: false #关掉安全认证
  port: 80
  context-path: /monitor #actuator的访问路径
endpoints:
  shutdown:
    enabled: true
  beans:
    id: instances

      # WebStatFilter配置
      web-stat-filter:
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤的格式
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'

      # StatViewServlet配置
      stat-view-servlet:
        enabled: true
        # 访问路径为/druid时，跳转到StatViewServlet
        url-pattern: /druid/*
        # 是否能够重置数据
        reset-enable: false
        # 需要账号密码才能访问控制台
        login-username: druid
        login-password: druid123
        # IP白名单
        # allow: 127.0.0.1
        #　IP黑名单（共同存在时，deny优先于allow）
        # deny: 192.168.1.218

      # 配置StatFilter
      filter:
        stat:
          log-slow-sql: true
